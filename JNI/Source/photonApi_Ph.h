/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class photonApi_Ph */

#ifndef _Included_photonApi_Ph
#define _Included_photonApi_Ph
#ifdef __cplusplus
extern "C" {
#endif
#undef photonApi_Ph_PH_HDR_FRAME_TYPE
#define photonApi_Ph_PH_HDR_FRAME_TYPE 50L
/*
 * Class:     photonApi_Ph
 * Method:    phStart
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_photonApi_Ph_phStart
  (JNIEnv *, jclass);

/*
 * Class:     photonApi_Ph
 * Method:    phExit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phExit
  (JNIEnv *, jclass);

/*
 * Class:     photonApi_Ph
 * Method:    phCreateRenderer
 * Signature: (LphotonApi/LongRef;I)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phCreateRenderer
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     photonApi_Ph
 * Method:    phRender
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phRender
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     photonApi_Ph
 * Method:    phDeleteRenderer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phDeleteRenderer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     photonApi_Ph
 * Method:    phCreateFrame
 * Signature: (LphotonApi/LongRef;I)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phCreateFrame
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     photonApi_Ph
 * Method:    phGetFrameData
 * Signature: (JLphotonApi/FloatArrayRef;LphotonApi/IntRef;LphotonApi/IntRef;LphotonApi/IntRef;)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phGetFrameData
  (JNIEnv *, jclass, jlong, jobject, jobject, jobject, jobject);

/*
 * Class:     photonApi_Ph
 * Method:    phDeleteFrame
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phDeleteFrame
  (JNIEnv *, jclass, jlong);

/*
 * Class:     photonApi_Ph
 * Method:    phCreateDescription
 * Signature: (LphotonApi/LongRef;)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phCreateDescription
  (JNIEnv *, jclass, jobject);

/*
 * Class:     photonApi_Ph
 * Method:    phLoadDescription
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phLoadDescription
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     photonApi_Ph
 * Method:    phUpdateDescription
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phUpdateDescription
  (JNIEnv *, jclass, jlong);

/*
 * Class:     photonApi_Ph
 * Method:    phDevelopFilm
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phDevelopFilm
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     photonApi_Ph
 * Method:    phDeleteDescription
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phDeleteDescription
  (JNIEnv *, jclass, jlong);

/*
 * Class:     photonApi_Ph
 * Method:    phQueryRendererPercentageProgress
 * Signature: (JLphotonApi/FloatRef;)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phQueryRendererPercentageProgress
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     photonApi_Ph
 * Method:    phQueryRendererSampleFrequency
 * Signature: (JLphotonApi/FloatRef;)V
 */
JNIEXPORT void JNICALL Java_photonApi_Ph_phQueryRendererSampleFrequency
  (JNIEnv *, jclass, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
