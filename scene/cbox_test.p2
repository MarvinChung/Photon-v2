## camera [string type pinhole] [real fov-degree 50] [vector3r position "0 0 16"] [vector3r direction "0 0 -1"]
## film [integer width 600] [integer height 600]
//## sampler [integer spp-budget 16]
## sampler [integer spp-budget 256]
//## integrator [string type backward-mis]
## integrator [string type backward-path]

-> geometry @boxWall [string type rectangle] [real width 1] [real height 1]
-> geometry @sphere [string type sphere] [real radius 0.5]
-> geometry @triMesh [string type triangle-mesh] 
[vector3r-array positions {"-2 -2 0" "2 -2 0" "0 2 0"}]
[vector3r-array texture-coordinates {"0 0 0" "0 0 0" "0 0 0"}]
[vector3r-array normals {"0 0 1" "0 0 1" "0 0 1"}]

// light
-> material @topLightMaterial [string type matte-opaque] [vector3r albedo "0.5 0.5 0.5"]
-> light-source @topLightSource [string type area] [vector3r emitted-radiance "10 10 10"]
-> actor-light @topLight [geometry geometry @sphere] [material material @topLightMaterial] 
[light-source light-source @topLightSource]
-> transform [string type translate] [actor-light target @topLight] [vector3r factor "0 1 0"]
-> transform [string type rotate] [actor-light target @topLight] [vector3r axis "1 0 0"] [real degree 90]

// some object...
-> material @objectMaterial [string type matte-opaque] [vector3r albedo "0.2 0.8 0.2"]
-> actor-model @someObject [geometry geometry @triMesh] [material material @objectMaterial]

// left wall
-> material @leftWallMaterial [string type matte-opaque] [vector3r albedo "0.2 0.8 0.2"]
-> actor-model @leftWall [geometry geometry @boxWall] [material material @leftWallMaterial]
-> transform [string type translate] [actor-model target @leftWall] [vector3r factor "-5 0 0"]
-> transform [string type rotate] [actor-model target @leftWall] [vector3r axis "0 1 0"] [real degree 90]
-> transform [string type scale] [actor-model target @leftWall] [vector3r factor "10 10 10"]

// right wall
-> material @rightWallMaterial [string type matte-opaque] [vector3r albedo "0.2 0.8 0.2"]
-> actor-model @rightWall [geometry geometry @boxWall] [material material @rightWallMaterial]
-> transform [string type translate] [actor-model target @rightWall] [vector3r factor "5 0 0"]
-> transform [string type rotate] [actor-model target @rightWall] [vector3r axis "0 1 0"] [real degree -90]
-> transform [string type scale] [actor-model target @rightWall] [vector3r factor "10 10 10"]

// top wall
-> material @topWallMaterial [string type matte-opaque] [vector3r albedo "0.7 0.7 0.7"]
-> actor-model @topWall [geometry geometry @boxWall] [material material @topWallMaterial]
-> transform [string type translate] [actor-model target @topWall] [vector3r factor "0 5 0"]
-> transform [string type rotate] [actor-model target @topWall] [vector3r axis "1 0 0"] [real degree 90]
-> transform [string type scale] [actor-model target @topWall] [vector3r factor "10 10 10"]

// bottom wall
-> material @bottomWallMaterial [string type matte-opaque] [vector3r albedo "0.7 0.7 0.7"]
-> actor-model @bottomWall [geometry geometry @boxWall] [material material @bottomWallMaterial]
-> transform [string type translate] [actor-model target @bottomWall] [vector3r factor "0 -5 0"]
-> transform [string type rotate] [actor-model target @bottomWall] [vector3r axis "1 0 0"] [real degree -90]
-> transform [string type scale] [actor-model target @bottomWall] [vector3r factor "10 10 10"]

// back wall
-> material @backWallMaterial [string type matte-opaque] [vector3r albedo "0.2 0.8 0.2"]
-> actor-model @backWall [geometry geometry @boxWall] [material material @backWallMaterial]
-> transform [string type translate] [actor-model target @backWall] [vector3r factor "0 0 -5"]
-> transform [string type scale] [actor-model target @backWall] [vector3r factor "10 10 10"]

