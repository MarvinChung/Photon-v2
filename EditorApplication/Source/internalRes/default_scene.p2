## camera(pinhole) [real fov-degree 50] [vector3r position "0 0 16"] [vector3r direction "0 0 -1"]
//## camera(pinhole) [real fov-degree 70] [vector3r position "-3.5 -3.6 2.9"] [vector3r direction "0.7 0.4 -0.3"]
//## camera(thin-lens) [real fov-degree 70] [real lens-radius-mm 220.0] [real focal-distance-mm 3300] [vector3r position "-3.5 -3.6 2.9"] [vector3r direction "0.7 0.4 -0.3"]

//## film(film) [integer width 400] [integer height 400]
//## film(film) [integer width 800] [integer height 800]
//## film(film) [integer width 800] [integer height 600]
//## film(hdr-rgb) [integer width 800] [integer height 800] [string filter-name "gaussian"]
## film(hdr-rgb) [integer width 800] [integer height 800] [string filter-name "mn"]

//## sample-generator(uniform-random) [integer sample-amount 60]
## sample-generator(stratified) [integer sample-amount 60][integer num-strata-2d-x 800][integer num-strata-2d-y 800]
//## sampler(uniform-random) [integer samples 120]

//## integrator(backward-path)
//## integrator(backward-light)
//## integrator(light-tracing)
//## integrator(surface-normal)
## integrator(backward-mis)



-> geometry(rectangle) @boxWall [real width 1][real height 1]

// top light (left)
-> material(matte-opaque) @topLightMaterial1 [vector3r albedo "0.5 0.5 0.5"]
-> light-source(area) @topLightSource1 [vector3r emitted-radiance "3.4 3.4 3.4"]
-> actor(light) @topLight1 [geometry geometry @boxWall] [material material @topLightMaterial1] [light-source light-source @topLightSource1]
-> actor(light) translate(@topLight1) [vector3r factor "-3 4.75 0"]
-> actor(light) rotate(@topLight1) [vector3r axis "1 0 0"] [real degree 90]
-> actor(light) scale(@topLight1) [vector3r factor "3 3 3"]

// top light (right)
-> material(matte-opaque) @topLightMaterial2 [vector3r albedo "0.5 0.5 0.5"]
-> light-source(area) @topLightSource2 [vector3r emitted-radiance "3.4 3.4 3.4"]
-> actor(light) @topLight2 [geometry geometry @boxWall] [material material @topLightMaterial2] [light-source light-source @topLightSource2]
-> actor(light) translate(@topLight2) [vector3r factor "3 4.75 0"]
-> actor(light) rotate(@topLight2)    [vector3r axis "1 0 0"] [real degree 90]
-> actor(light) scale(@topLight2)     [vector3r factor "3 3 3"]

// left wall
-> material(matte-opaque) @leftWallMaterial [vector3r albedo "0.85 0.3 0.3"]
-> actor(model) @leftWall [geometry geometry @boxWall] [material material @leftWallMaterial]
-> actor(model) translate(@leftWall) [vector3r factor "-5 0 0"]
-> actor(model) rotate(@leftWall)    [vector3r axis "0 1 0"] [real degree 90]
-> actor(model) scale(@leftWall)     [vector3r factor "10 10 10"]

// right wall
-> material(matte-opaque) @rightWallMaterial [vector3r albedo "0.3 0.3 0.85"]
-> actor(model) @rightWall [geometry geometry @boxWall] [material material @rightWallMaterial]
-> actor(model) translate(@rightWall) [vector3r factor "5 0 0"]
-> actor(model) rotate(@rightWall)    [vector3r axis "0 1 0"] [real degree -90]
-> actor(model) scale(@rightWall)     [vector3r factor "10 10 10"]

// top wall
-> material(matte-opaque) @topWallMaterial [vector3r albedo "0.7 0.7 0.7"]
-> actor(model) @topWall [geometry geometry @boxWall] [material material @topWallMaterial]
-> actor(model) translate(@topWall) [vector3r factor "0 5 0"]
-> actor(model) rotate(@topWall) [vector3r axis "1 0 0"] [real degree 90]
-> actor(model) scale(@topWall) [vector3r factor "10 10 10"]

// bottom wall
-> material(matte-opaque) @bottomWallMaterial [vector3r albedo "0.7 0.7 0.7"]
-> actor(model) @bottomWall [geometry geometry @boxWall] [material material @bottomWallMaterial]
-> actor(model) translate(@bottomWall) [vector3r factor "0 -5 0"]
-> actor(model) rotate(@bottomWall) [vector3r axis "1 0 0"] [real degree -90]
-> actor(model) scale(@bottomWall) [vector3r factor "10 10 10"]

// back wall
-> material(matte-opaque) @backWallMaterial [vector3r albedo "0.7 0.7 0.7"]
-> actor(model) @backWall [geometry geometry @boxWall] [material material @backWallMaterial]
-> actor(model) translate(@backWall) [vector3r factor "0 0 -5"]
-> actor(model) scale(@backWall) [vector3r factor "10 10 10"]

// create materials
-> material(matte-opaque) @diffuseMaterial [vector3r albedo "0.5 0.9 0.5"]
-> material(abraded-opaque) @goldMaterial [vector3r albedo "0.0 0.0 0.0"] [real roughness 0.0] [vector3r f0 "1.0 0.765557 0.336057"]
-> material(abraded-translucent) @glassMaterial [vector3r albedo "0.0 0.0 0.0"] [real roughness 0.0] [vector3r f0 "0.04 0.04 0.04"]
   [real ior 1.5]

// diffuse object
-> geometry(sphere) @diffuseGeometry [real radius 1.5]
-> actor(model) @diffuseModel [geometry geometry @diffuseGeometry] [material material @diffuseMaterial]
-> actor(model) translate(@diffuseModel) [vector3r factor "-3 -3.5 0"]

// metal object
-> geometry(sphere) @metalGeometry [real radius 1.5]
-> actor(model) @metalModel [geometry geometry @metalGeometry] [material material @goldMaterial]
-> actor(model) translate(@metalModel) [vector3r factor "0 -3.5 0"]

// glass object
-> geometry(sphere) @glassGeometry [real radius 1.5]
-> actor(model) @glassModel [geometry geometry @glassGeometry] [material material @glassMaterial]
-> actor(model) translate(@glassModel) [vector3r factor "3 0 0"]